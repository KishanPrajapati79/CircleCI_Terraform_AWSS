---

# https://circleci.com/developer/orbs/orb/circleci/terraform
version: 2.1
orbs:
  terraform: circleci/terraform@3.1
workflows:
  deploy_infra:
    jobs:
    # - terraform/fmt:
    #       checkout: true
    #       context: terraform
    - terraform/validate:
        checkout: true
        context: terraform
    - terraform/plan:
        checkout: true
        context: terraform
        persist-workspace: true
        requires:
        - terraform/validate
    - terraform/apply:
        attach-workspace: true
        context: terraform
        filters:
          branches:
            only: main
        requires:
        - terraform/plan
# workflows:
#   delete_infra:
#     jobs:
#       - terraform/destroy:
#           executor: terraform/default
#           steps:
#             - checkout
#             - run:
#                 name: Terraform Destroy
#                 command: |
#                   terraform init -backend-config="bucket=tfdemostatebucket" -backend-config="key=kishan/circleci.tfstate" -backend-config="region=ap-south-1"
#                   terraform destroy -auto-approve

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MIT

# version: 2

# jobs:
#   plan-apply:
#     working_directory: /tmp/project
#     docker:
#       - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
#     steps:
#       - checkout
#       - run:
#           name: terraform init & plan
#           command: |
#             terraform init -input=false
#             terraform plan -out tfapply -var-file variables.tf
#       - persist_to_workspace:
#           root: .
#           paths:
#             - .

#   apply:
#     docker:
#       - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
#     steps:
#       - attach_workspace:
#           at: .
#       - run:
#           name: terraform
#           command: |
#             terraform apply -auto-approve tfapply
#       - persist_to_workspace:
#           root: .
#           paths:
#             - .

#   plan-destroy:
#     docker:
#       - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
#     steps:
#       - attach_workspace:
#           at: .
#       - run:
#           name: terraform create destroy plan
#           command: |
#             terraform plan -destroy -out tfdestroy -var-file variables.tf
#       - persist_to_workspace:
#           root: .
#           paths:
#             - .

#   destroy:
#     docker:
#       - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
#     steps:
#       - attach_workspace:
#           at: .
#       - run:
#           name: terraform destroy
#           command: |
#             terraform apply -auto-approve tfdestroy
# workflows:
#   version: 2
#   plan_approve_apply:
#     jobs:
#       - plan-apply
#       - hold-apply:
#           type: approval
#           requires:
#             - plan-apply
#       - apply:
#           requires:
#             - hold-apply
#       - plan-destroy:
#           requires:
#             - apply
#       - hold-destroy:
#           type: approval
#           requires:
#             - plan-destroy
#       - destroy:
#           requires:
#             - hold-destroy


# version: 2.1
# jobs:
#   init:
#     docker:
#       - image: hashicorp/terraform
#     steps:
#       - checkout
#       - run: terraform init
#       - run: terraform plan
#       - run: terraform apply -auto-approve
#       - persist_to_workspace:
#           root: .
#           paths:
#             - .
#   hold:
#     docker:
#       - image: hashicorp/terraform
#     steps:
#       - run: echo "Placeholder"

#   destroy:
#     docker:
#       - image: hashicorp/terraform
#     steps:
#       - attach_workspace:
#           at: .
#       - run: terraform destroy -auto-approve 

# workflows:
#   test:
#     jobs:
#       - init
#       - hold:
#           type: approval
#           requires:
#             - init
#       - destroy:
#           requires:
#             - hold


# version: 2.1

# executors:
#   terraform-executor:
#     docker:
#       - image: hashicorp/terraform:latest
#     working_directory: .

# jobs:
#   terraform-apply:
#     executor: terraform-executor
#     steps:
#       - checkout
#       - run:
#           name: Setup AWS CLI
#           command: |
#             apk add --no-cache python3 py3-pip
#             pip3 install awscli
#       - run:
#           name: Terraform Init
#           command: terraform init
#       - run:
#           name: Terraform Apply
#           command: terraform apply -auto-approve
#       - run:
#           name: Save Private Key to Env Var
#           command: |
#             PRIVATE_KEY=$(terraform output -raw private_key)
#             echo "export PRIVATE_KEY='${PRIVATE_KEY}'" >> $BASH_ENV
#       - run:
#           name: Verify Private Key
#           command: echo $PRIVATE_KEY